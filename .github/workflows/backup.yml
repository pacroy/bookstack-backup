name: Backup
concurrency: backup

on:
  pull_request:
    branches: [main]
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0'

permissions:
  contents: read
  id-token: write

env:
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  KUBE_CA_BASE64: ${{ secrets.KUBE_CA_BASE64 }}
  KUBE_API_SERVER: ${{ secrets.KUBE_API_SERVER }}
  KUBE_USER_TOKEN: ${{ secrets.KUBE_USER_TOKEN }}
  KUBE_CONTEXT: ${{ secrets.KUBE_CONTEXT }}
  WIKI_NAMSPACE: ${{ secrets.WIKI_NAMSPACE }}
  MYSQL_APP_LABEL: ${{ secrets.MYSQL_APP_LABEL }}
  BOOKSTACK_APP_LABEL: ${{ secrets.BOOKSTACK_APP_LABEL }}
  BLOB_CONTAINER_NAME: ${{ secrets.BLOB_CONTAINER_NAME }}
  STORAGE_ACCOUNT_NAME: ${{ secrets.STORAGE_ACCOUNT_NAME }}

jobs:
  backup:
    name: Backup
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: 'Checkout self'
        uses: actions/checkout@v4
      - name: 'Check variables'
        shell: bash
        run: |
          chk_var_must_set() {
            if [ -z "$1" ]; then echo "$2" && passed="false"; fi
          }

          chk_var_must_set "$AZURE_TENANT_ID" '::error::Variable "AZURE_TENANT_ID" is not set'
          chk_var_must_set "$AZURE_CLIENT_ID" '::error::Variable "AZURE_CLIENT_ID" is not set'
          chk_var_must_set "$AZURE_SUBSCRIPTION_ID" '::error::Variable "AZURE_SUBSCRIPTION_ID" is not set'

          chk_var_must_set "$KUBE_CA_BASE64" '::error::Variable "KUBE_CA_BASE64" is not set'
          chk_var_must_set "$KUBE_API_SERVER" '::error::Variable "KUBE_API_SERVER" is not set'
          chk_var_must_set "$KUBE_USER_TOKEN" '::error::Variable "KUBE_USER_TOKEN" is not set'
          chk_var_must_set "$KUBE_CONTEXT" '::error::Variable "KUBE_CONTEXT" is not set'

          chk_var_must_set "$WIKI_NAMSPACE" '::error::Variable "WIKI_NAMSPACE" is not set'
          chk_var_must_set "$MYSQL_APP_LABEL" '::error::Variable "MYSQL_APP_LABEL" is not set'
          chk_var_must_set "$BOOKSTACK_APP_LABEL" '::error::Variable "BOOKSTACK_APP_LABEL" is not set'

          chk_var_must_set "$BLOB_CONTAINER_NAME" '::error::Variable "BLOB_CONTAINER_NAME" is not set'
          chk_var_must_set "$STORAGE_ACCOUNT_NAME" '::error::Variable "STORAGE_ACCOUNT_NAME" is not set'

          if [ "$passed" = "false" ]; then
            echo '::error::Missing one or more required variable(s).'
            exit 90
          else
            echo 'All required variables are set.'
          fi
      - name: Az CLI login
        uses: azure/login@v1
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}